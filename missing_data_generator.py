# -*- coding: utf-8 -*-
"""missing data generator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1irMgekv3WWj53P2hMUsM2w73NPv8d3PX
"""

import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.impute import SimpleImputer

# Function to detect missing values in the DataFrame
def detect_missing_values(df):
    # Create a boolean DataFrame indicating missing values
    is_missing = df.isna()

    # Add an "is_missing" column to the DataFrame
    df["is_missing"] = is_missing.any(axis=1)

    return df

# Function to generate missing values using a regression model
def generate_missing_values(df, regression_model):
    # Get the columns with missing values
    columns_with_missing_values = df[df["is_missing"]==True].columns

    # Iterate over columns with missing values
    for column in columns_with_missing_values:
        # Get all column names and impute missing values
        df_x_columns = df.columns
        imputer = SimpleImputer(strategy='median')
        df_x = imputer.fit_transform(df)

        # Create a DataFrame from the imputed values
        df_x = pd.DataFrame(df_x, columns=df_x_columns)

        # Prepare features and target for the regression model
        features = df_x.drop(column, axis=1)
        target = df_x[column]
        target = target[target.isna() == False]

        # Fit the regression model to predict the missing values
        regression_model.fit(features, target)
        predicted_values = regression_model.predict(df_x.drop(column, axis=1))

        # Find the indices of NaN values in the current column
        nan_indices = df[column].index[df[column].isna()]

        # Fill NaN values with predicted values
        for i, nan_index in enumerate(nan_indices):
            df.at[nan_index, column] = predicted_values[i]

    return df

# Main function
def main():
    # Load the CSV file into a DataFrame
    df = pd.read_csv("/content/california_housing_train.csv")

    # Detect and mark missing values in the DataFrame
    df = detect_missing_values(df)

    # Initialize a regression model (RandomForestRegressor in this case)
    regression_model = RandomForestRegressor()

    # Generate missing values using the regression model
    df = generate_missing_values(df, regression_model)

    # Remove the "is_missing" column
    df = df.drop('is_missing', axis=1)
    print(df)
    # Print the DataFrame with imputed values
    df.to_csv('output.csv')

if __name__ == "__main__":
    main()







